{"version":3,"sources":["components/NewTodo.module.css","components/TodoItem.module.css","components/Todos.module.css","components/NewTodo.tsx","components/TodoItem.tsx","components/Todos.tsx","models/todo.ts","App.tsx","index.tsx"],"names":["module","exports","NewTodo","props","todoTextInputRef","useRef","onSubmit","event","preventDefault","enteredText","current","value","trim","length","onAddTodo","focus","className","classes","form","htmlFor","type","id","ref","TodoItem","item","Stack","direction","justifyContent","alignItems","text","IconButton","onClick","onRemoveTodo","color","Todos","todos","items","map","bind","Todo","todoText","this","Date","toISOString","App","useState","setTodos","newTodo","prevTodos","concat","todoId","filter","todo","ReactDOM","render","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,KAAO,wB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,gIC8BXC,EA3BgD,SAACC,GAC9D,IAAMC,EAAmBC,iBAAyB,MAiBlD,OACA,uBAAMC,SAhBgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAcL,EAAiBM,QAASC,MAEZ,IAA9BF,EAAYG,OAAOC,SAKvBV,EAAMW,UAAUL,GAChBL,EAAiBM,QAASC,MAAQ,GAClCP,EAAiBM,QAASK,UAIGC,UAAWC,IAAQC,KAAlD,UACE,uBAAOC,QAAQ,OAAf,2BACA,uBAAOC,KAAK,OAAMC,GAAG,OAAOC,IAAKlB,IACjC,kD,kDCDWmB,EAnB6E,SAACpB,GAC3F,OACE,mCACE,oBAAIa,UAAWC,IAAQO,KAAvB,SACE,eAACC,EAAA,EAAD,CACEC,UAAU,MACVC,eAAe,gBACfC,WAAW,SAHb,UAKCzB,EAAM0B,KACP,cAACC,EAAA,EAAD,CAAYC,QAAS5B,EAAM6B,aAAcC,MAAM,UAA/C,SACE,cAAC,IAAD,c,iBCAKC,EAV+D,SAAC/B,GAC7E,OACA,oBAAIa,UAAWC,IAAQkB,MAAvB,SACGhC,EAAMiC,MAAMC,KAAI,SAACb,GAAD,OACf,cAAC,EAAD,CAAwBK,KAAML,EAAKK,KAAMG,aAAc7B,EAAM6B,aAAaM,KAAK,KAAMd,EAAKH,KAA3EG,EAAKH,U,QCDXkB,EANb,WAAYC,GAAmB,yBAH/BnB,QAG8B,OAF9BQ,UAE8B,EAC5BY,KAAKZ,KAAOW,EACZC,KAAKpB,IAAK,IAAIqB,MAAOC,eC0BVC,MAzBf,WACE,MAA0BC,mBAAiB,IAA3C,mBAAOV,EAAP,KAAcW,EAAd,KAgBA,OACE,gCACE,cAAC,EAAD,CAAShC,UAhBU,SAAC0B,GACtB,IAAMO,EAAU,IAAIR,EAAKC,GAEzBM,GAAS,SAACE,GACR,OAAOA,EAAUC,OAAOF,SAaxB,cAAC,EAAD,CAAOX,MAAOD,EAAOH,aATC,SAACkB,GACzBJ,GAAS,SAACE,GACR,OAAOA,EAAUG,QAAO,SAAAC,GAAI,OAAIA,EAAK/B,KAAO6B,eCdlDG,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3c421d38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__3foEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__EiNWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__2s1OT\"};","import React from \"react\";\nimport { useRef } from 'react';\nimport classes from './NewTodo.module.css';\n\nconst NewTodo: React.FC<{onAddTodo: (text: string) => void}> = (props) => {\n  const todoTextInputRef = useRef<HTMLInputElement>(null);\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const enteredText = todoTextInputRef.current!.value;\n\n    if (enteredText.trim().length === 0) {\n      // throw an error\n      return;\n    }\n\n    props.onAddTodo(enteredText);\n    todoTextInputRef.current!.value = ''\n    todoTextInputRef.current!.focus()\n  };\n\n  return (\n  <form onSubmit={submitHandler} className={classes.form}>\n    <label htmlFor='text'>Today's todos</label>\n    <input type='text'id='text' ref={todoTextInputRef}/>\n    <button>Add Todo</button>\n  </form>\n  )\n};\n\nexport default NewTodo;\n","import React from 'react';\nimport classes from './TodoItem.module.css';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport IconButton from '@mui/material/IconButton';\nimport Stack from '@mui/material/Stack';\n\nconst TodoItem:React.FC<{ text: string; onRemoveTodo: (event: React.MouseEvent) => void}> = (props) => {\n  return (\n    <>\n      <li className={classes.item}>\n        <Stack\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n        >\n        {props.text}\n        <IconButton onClick={props.onRemoveTodo} color=\"warning\">\n          <DeleteOutlineIcon/>\n        </IconButton>\n        </Stack>\n      </li>\n    </>\n  );\n};\n\nexport default TodoItem;\n","// React.FC (functional component) is already generic type\n// <{}> this define an object type with array of strings for the component props\n// the class Todo becomes a type\nimport Todo from '../models/todo';\nimport TodoItem from './TodoItem';\nimport classes from './Todos.module.css'\n\nconst Todos: React.FC<{items: Todo[]; onRemoveTodo: (id: string) => void }> = (props) => {\n  return (\n  <ul className={classes.todos}>\n    {props.items.map((item) => (\n      <TodoItem key={item.id} text={item.text} onRemoveTodo={props.onRemoveTodo.bind(null, item.id)}/>\n    ))}\n  </ul>\n  );\n};\n\nexport default Todos;\n","class Todo {\n  id: string;\n  text: string;\n\n  constructor(todoText: string) {\n    this.text = todoText;\n    this.id = new Date().toISOString();\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport NewTodo from './components/NewTodo';\nimport Todos from './components/Todos';\nimport Todo from './models/todo';\nimport { useState } from 'react';\n\nfunction App() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodoHandler = (todoText: string) => {\n    const newTodo = new Todo(todoText);\n\n    setTodos((prevTodos) => {\n      return prevTodos.concat(newTodo);\n    });\n  };\n\n  const removeTodoHandler = (todoId: string) => {\n    setTodos((prevTodos) => {\n      return prevTodos.filter(todo => todo.id !== todoId)\n    });\n  };\n\n  return (\n    <div>\n      <NewTodo onAddTodo={addTodoHandler} />\n      <Todos items={todos} onRemoveTodo={removeTodoHandler}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}